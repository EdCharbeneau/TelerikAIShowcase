@using AIShowcase.WebApp.Services.TextToSpeechServices
@using AIShowcase.WebApp.Services
@inject ITextToSpeechService tts
@inject ApplicationSettings settings
<b>Voices</b>

<div class="k-d-grid k-grid-cols-2 k-gap-2">
    @if (Voices.Length > 0)
    {
        foreach (var voice in Voices)
        {
            <TelerikButton OnClick="(()=> OnClick(voice))"
                           Class="@cssClass(voice)">@voice.DisplayName</TelerikButton>
        }
    }
</div>

@code {
    private string cssClass(Voice voice) => voice.Id == settings.SelectedVoiceId ? "k-button-solid-primary k-button-solid" : "";
    private Voice[] Voices { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        settings.OnChange += SettingsChanged;
        var voices = await tts.GetVoices();
        Voices = voices.ToArray();
    }

    private async Task OnClick(Voice voice)
    {
        settings.SetSelectedVoiceId(voice.Id);
        await Task.CompletedTask;
    }

    private void SettingsChanged() {
        InvokeAsync(() => StateHasChanged());
    }

}
