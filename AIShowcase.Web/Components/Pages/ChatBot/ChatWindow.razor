@page "/basic-chat"
@using Microsoft.Extensions.AI
@inject IChatClient ai

<TelerikChat Data="uiChatHistory"
             TextField="@nameof(UIChatMessage.Content)"
             MessageWidthMode="@MessageWidthMode.Standard"
             OnSendMessage="@(async (args) => await HandlePromptRequest(args))"
             AuthorId="user">
    <ChatSettings>
        <AIPromptSpeechToTextButtonSettings Lang="en-US" />
    </ChatSettings>
</TelerikChat>

@code {
    private List<ChatMessage> messages = [];

    private List<UIChatMessage> uiChatHistory { get; set; } = new List<UIChatMessage>();

    protected override async Task OnInitializedAsync()
    {
        messages = new List<ChatMessage>
        {
            new ChatMessage(ChatRole.System, "Greet the user and then tell them about .")
        };
        var response = await ai.GetResponseAsync(messages);
        messages.Add(new ChatMessage(ChatRole.Assistant, response.Text));
        uiChatHistory.Add(UIChatMessage.AssistantMessage(response.Text));
    }

    private async Task HandlePromptRequest(ChatSendMessageEventArgs args)
    {
        messages.Add(new ChatMessage(ChatRole.User, args.Message));
        uiChatHistory.Add(UIChatMessage.UserMessage(args.Message));

        var response = await ai.GetResponseAsync([.. messages, new ChatMessage(ChatRole.User, args.Message)]);

        messages.AddMessages(response);
        uiChatHistory.Add(UIChatMessage.AssistantMessage(response.Text));

    }
}