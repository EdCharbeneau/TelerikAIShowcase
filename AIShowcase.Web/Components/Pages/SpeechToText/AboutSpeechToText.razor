@page "/speech-to-text"
<PageTitle>Telerik UI for Blazor | AI Showcase </PageTitle>

<TelerikCard>
    <CardBody>
        <div class="k-d-grid k-grid-cols-1 k-gap-4">
            <ContentPanel>
                <label>Your captured text will appear below this line:</label>
                <hr />
                <p>@recognizedTextDisplay</p>
            </ContentPanel>
            <ContentPanel CssClass="k-d-flex">
                <span>Press the record button to beign using your microphone<TelerikSvgIcon Icon="@SvgIcon.ArrowRight" /></span>
                <SpeechToTextButton Id="record-button"
                OnStarted="OnStarted"
                OnRecongizeded="OnRecognizedText" />
                <TelerikButton OnClick="ShowInfo" Title="Info" Icon="SvgIcon.InfoCircle"/>

            </ContentPanel>
        </div>
    </CardBody>
</TelerikCard>


@* Off canvas elements *@
<TelerikPopover @ref="@InfoPopover"
AnimationType="@AnimationType.Fade"
AnchorSelector="#record-button"
Collision="@PopoverCollision.Flip"
Offset="20"
Position="@PopoverPosition.Bottom"
Width="300px">
    <PopoverHeader>
        Try me!
    </PopoverHeader>
    <PopoverContent>
        <p>Clicking the record button will initialize your microphone and use Speech-to-text translation.</p>
    </PopoverContent>
    <PopoverActions>
        <TelerikButton Icon="@SvgIcon.XCircle" OnClick="@ClosePopover">Close</TelerikButton>
    </PopoverActions>
</TelerikPopover>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(TimeSpan.FromSeconds(5));
            if (!hasUserInteracted)
            {
                InfoPopover?.Show();
                StateHasChanged();
            }
        }
    }

    // If the user hasn't interacted with the record button after a given amount of time
    // Then display an info box to attract the user's attention
    bool hasUserInteracted = false;
    string recognizedTextDisplay = "Click the record button below to see your text appear here.";

    TelerikPopover? InfoPopover { get; set; }

    void OnStarted() => hasUserInteracted = true;

    void OnRecognizedText(string recognizedText)
    {
        recognizedTextDisplay = recognizedText;
    }

    void ClosePopover()
    {
        InfoPopover?.Hide();
    }

    void ShowInfo() {
        InfoPopover?.Show();
        hasUserInteracted = true;
    }
}
